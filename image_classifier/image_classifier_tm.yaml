threagile_version: 1.0.0

title: Image Classification System Threat Model

date: 2024-06-13

author:
  name: Jane Smith
  homepage: www.example.com

management_summary_comment: >
  This threat model identifies potential threats and vulnerabilities for an image classification system, emphasizing adversarial machine learning threats and necessary security measures.

business_criticality: critical # values: archive, operational, important, critical, mission-critical

business_overview:
  description: >
    The image classification system is used to categorize images into predefined classes. This model identifies key assets, actors, and data flows involved in the system, with a focus on adversarial machine learning threats.

questions: # simply use "" as answer to signal "unanswered"
  How are the admin clients managed/protected against compromise?: "Managed by ABC Corp"
  How are the development clients managed/protected against compromise?: "Managed by XYZ Ltd"
  How are the build pipeline components managed/protected against compromise?: "Utilizing secure CI/CD practices"

abuse_cases:
  Adversarial Examples: >
    As an attacker, I want to craft adversarial examples that cause the image classification system to misclassify images.
  Data Poisoning: >
    As an attacker, I want to introduce malicious data during training to corrupt the model's behavior and outputs.
  Model Extraction: >
    As an attacker, I want to replicate the image classification model by making repeated queries to the system and analyzing the outputs to create a similar model.
  Training Data Inversion: >
    As an attacker, I want to reconstruct the training data from the model to gain access to sensitive information.
  Evasion Attacks: >
    As an attacker, I want to modify input images slightly to avoid detection or mislead the classification system.
  Model Inversion: >
    As an attacker, I want to infer sensitive attributes about the training data used by the image classification model.
  Privacy Attack: >
    As an attacker, I want to extract personally identifiable information (PII) or other sensitive data from the model's responses, violating user privacy.

security_requirements:
  Input Validation: Ensure strict validation of all input data to prevent injection attacks and data corruption.
  Authentication: Implement strong authentication mechanisms to protect against unauthorized access.
  Data Encryption: Encrypt sensitive data both in transit and at rest to protect against data breaches.
  Access Controls: Enforce strict access controls to limit exposure of sensitive data and system components.
  Anomaly Detection: Implement monitoring and anomaly detection to identify and respond to unusual activities that may indicate an ongoing attack.
  Privacy Protection: Apply techniques such as differential privacy to safeguard user data from being inferred or extracted from the model's outputs.
  Adversarial Training: Incorporate adversarial training techniques to enhance the model's robustness against adversarial examples.
  Model Monitoring: Continuously monitor the model's performance to detect and mitigate potential adversarial attacks and data drift.
  Secure Training Data: Ensure the integrity and confidentiality of the training data to prevent data poisoning and other attacks.

tags_available:
  - linux
  - python
  - tensorflow
  - pytorch
  - aws
  - azure
  - gcp

data_assets:
  Input Images:
    id: input-images
    description: Images submitted by users for classification.
    usage: business
    origin: Users
    owner: Image Classification System
    quantity: very-many
    confidentiality: restricted
    integrity: operational
    availability: important
    justification_cia_rating: >
      Input images are essential for the operation of the image classification system, requiring protection against unauthorized access and modification.

  Classification Results:
    id: classification-results
    description: Results of the image classification.
    usage: business
    origin: Image Classification System
    owner: Image Classification System
    quantity: many
    confidentiality: restricted
    integrity: operational
    availability: important
    justification_cia_rating: >
      Classification results are crucial for providing feedback to users, necessitating protection against unauthorized access and modification.

  Image Classification Model:
    id: image-classification-model
    description: The core model used for image classification.
    usage: devops
    origin: Model Development Team
    owner: Image Classification System
    quantity: few
    confidentiality: strictly-confidential
    integrity: critical
    availability: critical
    justification_cia_rating: >
      The image classification model is the core asset of the system, requiring stringent protection to ensure its integrity and availability.

  Training Data:
    id: training-data
    description: Data used for training the image classification model.
    usage: devops
    origin: Various sources
    owner: Image Classification System
    quantity: very-many
    confidentiality: strictly-confidential
    integrity: critical
    availability: critical
    justification_cia_rating: >
      Training data is essential for maintaining the accuracy and reliability of the image classification model, requiring high confidentiality and integrity.

  User Metadata:
    id: user-metadata
    description: Metadata associated with user interactions, such as IP addresses and timestamps.
    usage: business
    origin: Users
    owner: Image Classification System
    quantity: many
    confidentiality: restricted
    integrity: operational
    availability: operational
    justification_cia_rating: >
      User metadata is necessary for monitoring and improving the image classification system, requiring adequate protection to ensure operational integrity and availability.

actors:
  Users:
    description: End-users interacting with the image classification system.
    motivation: Use the application for classifying images.
  Admins:
    description: Administrators managing and maintaining the image classification system.
    motivation: Ensure the system is running smoothly and securely.
  External Data Providers:
    description: APIs and other external services providing data to the image classification system.
    motivation: Supply data for enhancing the classification results.
  Attackers:
    description: Malicious actors attempting to exploit vulnerabilities in the image classification system.
    motivation: Disrupt the system, steal data, or manipulate classification results.

technical_assets:
  Image Classification Server:
    description: The server hosting the image classification application.
    owner: Image Classification System
    technology: AWS EC2
    tags:
      - linux
      - aws:ec2
    security_requirements:
      - Input Validation
      - Authentication
      - Data Encryption

  External Data Sources:
    description: External APIs providing data for the image classification application.
    owner: External Data Providers
    technology: Various
    tags:
      - api
    security_requirements:
      - Data Encryption
      - Access Controls

  Model Storage:
    description: Storage system for the image classification model files.
    owner: Image Classification System
    technology: AWS S3
    tags:
      - aws:s3
    security_requirements:
      - Data Encryption
      - Access Controls

  User Interaction Interface:
    description: Web interface or API through which users interact with the image classification system.
    owner: Image Classification System
    technology: React, Node.js
    tags:
      - javascript
      - react
      - nodejs
    security_requirements:
      - Input Validation
      - Authentication
      - Data Encryption

dataflows:
  Image_Submission:
    source: Users
    destination: Image Classification Server
    data_assets: [input-images]
    protocol: HTTPS
    description: >
      Users submit images to the image classification application through a secure web interface.
    security_requirements:
      - Data Encryption
      - Input Validation

  Classification_Result_Delivery:
    source: Image Classification Server
    destination: Users
    data_assets: [classification-results]
    protocol: HTTPS
    description: >
      The classification results are delivered back to the users through a secure web interface.
    security_requirements:
      - Data Encryption
      - Access Controls

  Model_Storage_Access:
    source: Image Classification Server
    destination: Model Storage
    data_assets: [image-classification-model]
    protocol: AWS S3 API
    description: >
      The image classification model is stored and accessed from an AWS S3 bucket.
    security_requirements:
      - Data Encryption
      - Access Controls

  User_Metadata_Collection:
    source: User Interaction Interface
    destination: Image Classification Server
    data_assets: [user-metadata]
    protocol: HTTPS
    description: >
      Metadata about user interactions is collected and sent to the image classification server for analysis.
    security_requirements:
      - Data Encryption
      - Access Controls

